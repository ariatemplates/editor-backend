var oop = require('oop').oop;

var ValidationVisitor = oop.Class({
	name: 'ValidationVisitor',

	init: function() {
		this._output = this.emptyOutput();
	},

	methods: {

		/**
		 * Returns an empty response for validation errors
		 * @return {Object}
		 */
		emptyOutput: function() {
			return {
				errors: [],
				warnings: []
			};
		},

		/**
		 * Called before the graph traversal
		 */
		start: function() {
			this._output = this.emptyOutput();
		},

		/**
		 * Called for each node
		 * @param {Node} node
		 */
		processNode: function(node) {
			var errors = node.get('errors');
			if (errors != null) {
				this._output.errors.push({
					location: node.location,
					messages: errors
				});
			}
			var warnings = node.get('warnings');
			if (warnings != null) {
				this._output.warnings.push({
					location: node.location,
					messages: warnings
				});
			}
		},

		/**
		 * Called after the graph traversal to retrieve the result
		 * @return {Object} It contains errors and warnings
		 */
		end: function() {
			return this._output;
		}

	}
});

exports.ValidationVisitor = new ValidationVisitor();
