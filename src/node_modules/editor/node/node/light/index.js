var oop = require('oop').oop;





var definition = require('editor/node/node/common').definition;

definition.init = function(input) {
	this.type = input.type;
	this.location = input.location;
	this.source = input.source;

	// Computes line and column indexes for end position
	if (this.source != null) {
		var end = this.location.end;

		if (end == null) {
			end = this.location.end = {};
		}

		if (end.index == null) {
			end.index = this.location.start.index + this.source.length;
		}
	}

	this.properties = {};
	this.flags = {};
	this.children = [];
	this.childrenIndex = {};
	this._index = 0;
};



/***********************************************************************
 * Children management
 **********************************************************************/

definition.methods._pushChild = function(id, child) {
	this.children.push(child);

	// Private properties ----------------------------------------------

	child._index = this.children.length - 1;
	child._key = id;

	// Properties ------------------------------------------------------

	child.parent = this;


	// Return ----------------------------------------------------------

	return child;
};

var Node = oop.Class(definition);





exports.Node = Node;
